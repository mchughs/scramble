{"version":3,"sources":["scrambler/utils.cljc"],"mappings":";;AAEA;;;;;;;AAAA,AAAMA,AAMHC,AAAcC;AANjB,AAOE,AAAMC,AAAc,AAACC,AAAYF;AAC3BG,AAAc,AAACD,AAAYH;AADjC,AAEE,AAACK,AACC,AAAAC;AAAA,AAAA,AAAAC,AAAAD;AAAA,AAAAE,AAAAD,AAAA,AAAA,AAAME;AAAN,AAAAD,AAAAD,AAAA,AAAA,AAAWG;AAAX,AACE,AAAG,AAAA,AAACC,AAAIP,AAAcK,AAAQC;AAChCR","names":["scrambler.utils/scramble?","scrabble-hand","target","target-freq","cljs.core/frequencies","scrabble-freq","cljs.core/not-any?","p__27325","vec__27326","cljs.core.nth","char","count","cljs.core.get"],"sourcesContent":["(ns scrambler.utils)\n\n(defn scramble?\n  \"Takes a string of usable chars and a target string.\n   If for any char in the target string,\n   it appears more in the target string\n   than in the set of usable chars,\n   then scamble? returns false.\"\n  [scrabble-hand target]\n  (let [target-freq   (frequencies target)\n        scrabble-freq (frequencies scrabble-hand)]\n    (not-any?\n      (fn [[char count]]\n        (< (get scrabble-freq char 0) count))\n      target-freq)))\n"]}